server {
    listen 80;
#    server_name servername.com www.servername.com;
    server_name _;
    # Redirect all HTTP requests to HTTPS
    return 301 https://$host$request_uri;
}


server {
    listen 443 ssl;
#    server_name servername.com www.servername.com;
    server_name _;
    root /usr/share/nginx/html/public;
    index  index.php index.html index.htm;
    server_name _;
    client_max_body_size 100M;
    autoindex off;
    proxy_busy_buffers_size   512k;
    proxy_buffers   4 512k;
    proxy_buffer_size   256k;   
    proxy_read_timeout 3600; 

    # SSL Certificate Configuration
    ssl_certificate /etc/nginx/certs/cert.pem;
    ssl_certificate_key /etc/nginx/certs/privkey.pem;
    ssl_trusted_certificate /etc/nginx/certs/chain.pem;
	
    # Add stdout logging
    error_log /dev/stdout;
    access_log /dev/stdout;

    # Add option for x-forward-for (real ip when behind elb)
    real_ip_header X-Forwarded-For;

    # Add Strict Transport Security (HSTS)
    add_header Strict-Transport-Security "max-age=31536000; includeSubDomains" always;

    error_page 403 502 503 504 /500.html;
    location = /500.html {
       root /usr/share/nginx/html/public;
       internal;
    }


    location @rewrite {
        rewrite ^/(.*)$ /index.php?q=$1;
    }

    # Don't allow direct access to PHP files in the vendor directory.
    location ~ /vendor/.*\.php$ {
        deny all;
        return 404;
    }

    location ~ '\.php$|^/update.php' {
		try_files $uri $uri/ /index.php?$query_string;
        fastcgi_split_path_info ^(.+\.php)(/.+)$;
        fastcgi_pass unix:/run/php/php7.4-fpm.sock;
        fastcgi_index index.php;
        include fastcgi_params;
        fastcgi_param SCRIPT_FILENAME $document_root$fastcgi_script_name;
        fastcgi_param PATH_INFO $fastcgi_path_info;
        fastcgi_buffers 16 32k;
        fastcgi_buffer_size 64k;
        fastcgi_busy_buffers_size 64k;
        fastcgi_read_timeout 300;
    }
    location ~* \.(jpg|jpeg|gif|png|css|js|ico|xml)$ {
        expires           5d;
    }
    location ~ ^/sites/.*/files/styles/ { # For Drupal >= 7
        try_files $uri @rewrite;
    }
    location ~ ^(/[a-z\-]+)?/system/files/ { # For Drupal >= 7
        try_files $uri /index.php?$query_string;
    }
	# Remove index.php from url

	if ($request_uri ~* "^(.*/)index\.php$") {
	    return 301 $1;
	}
 
	location / {
	    try_files $uri $uri/ /index.php?$query_string;
 
	    # Remove from everywhere index.php
	    if ($request_uri ~* "^(.*/)index\.php(/?)(.*)") {
	        return 301 $1$3;
	    }
	}
 
	# Remove trailing slash.
	if (!-d $request_filename) {
	    rewrite ^/(.+)/$ /$1 permanent;
	}
 
	# Clean Double Slashes
	if ($request_uri ~* "\/\/") {
	    rewrite ^/(.*) /$1 permanent;
	}

}

